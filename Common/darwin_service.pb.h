// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: darwin_service.proto
// Protobuf C++ Version: 4.25.1

#ifndef GOOGLE_PROTOBUF_INCLUDED_darwin_5fservice_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_darwin_5fservice_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4025000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4025001 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "vector_math.pb.h"
#include "world_parameter.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_darwin_5fservice_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_darwin_5fservice_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_darwin_5fservice_2eproto;
namespace proto {
class CreateCharacterRequest;
struct CreateCharacterRequestDefaultTypeInternal;
extern CreateCharacterRequestDefaultTypeInternal _CreateCharacterRequest_default_instance_;
class CreateCharacterResponse;
struct CreateCharacterResponseDefaultTypeInternal;
extern CreateCharacterResponseDefaultTypeInternal _CreateCharacterResponse_default_instance_;
class PingRequest;
struct PingRequestDefaultTypeInternal;
extern PingRequestDefaultTypeInternal _PingRequest_default_instance_;
class PingResponse;
struct PingResponseDefaultTypeInternal;
extern PingResponseDefaultTypeInternal _PingResponse_default_instance_;
class ReportInGameRequest;
struct ReportInGameRequestDefaultTypeInternal;
extern ReportInGameRequestDefaultTypeInternal _ReportInGameRequest_default_instance_;
class ReportInGameResponse;
struct ReportInGameResponseDefaultTypeInternal;
extern ReportInGameResponseDefaultTypeInternal _ReportInGameResponse_default_instance_;
class UpdateRequest;
struct UpdateRequestDefaultTypeInternal;
extern UpdateRequestDefaultTypeInternal _UpdateRequest_default_instance_;
class UpdateResponse;
struct UpdateResponseDefaultTypeInternal;
extern UpdateResponseDefaultTypeInternal _UpdateResponse_default_instance_;
}  // namespace proto
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace proto {

// ===================================================================


// -------------------------------------------------------------------

class UpdateRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.UpdateRequest) */ {
 public:
  inline UpdateRequest() : UpdateRequest(nullptr) {}
  ~UpdateRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR UpdateRequest(::google::protobuf::internal::ConstantInitialized);

  inline UpdateRequest(const UpdateRequest& from)
      : UpdateRequest(nullptr, from) {}
  UpdateRequest(UpdateRequest&& from) noexcept
    : UpdateRequest() {
    *this = ::std::move(from);
  }

  inline UpdateRequest& operator=(const UpdateRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdateRequest& operator=(UpdateRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UpdateRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const UpdateRequest* internal_default_instance() {
    return reinterpret_cast<const UpdateRequest*>(
               &_UpdateRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(UpdateRequest& a, UpdateRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(UpdateRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpdateRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UpdateRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<UpdateRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UpdateRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const UpdateRequest& from) {
    UpdateRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(UpdateRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "proto.UpdateRequest";
  }
  protected:
  explicit UpdateRequest(::google::protobuf::Arena* arena);
  UpdateRequest(::google::protobuf::Arena* arena, const UpdateRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
  };
  // string name = 1;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // @@protoc_insertion_point(class_scope:proto.UpdateRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      32, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr name_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_darwin_5fservice_2eproto;
};// -------------------------------------------------------------------

class ReportInGameResponse final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:proto.ReportInGameResponse) */ {
 public:
  inline ReportInGameResponse() : ReportInGameResponse(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ReportInGameResponse(::google::protobuf::internal::ConstantInitialized);

  inline ReportInGameResponse(const ReportInGameResponse& from)
      : ReportInGameResponse(nullptr, from) {}
  ReportInGameResponse(ReportInGameResponse&& from) noexcept
    : ReportInGameResponse() {
    *this = ::std::move(from);
  }

  inline ReportInGameResponse& operator=(const ReportInGameResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ReportInGameResponse& operator=(ReportInGameResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ReportInGameResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ReportInGameResponse* internal_default_instance() {
    return reinterpret_cast<const ReportInGameResponse*>(
               &_ReportInGameResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(ReportInGameResponse& a, ReportInGameResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(ReportInGameResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ReportInGameResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ReportInGameResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ReportInGameResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const ReportInGameResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const ReportInGameResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "proto.ReportInGameResponse";
  }
  protected:
  explicit ReportInGameResponse(::google::protobuf::Arena* arena);
  ReportInGameResponse(::google::protobuf::Arena* arena, const ReportInGameResponse& from);
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.ReportInGameResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_darwin_5fservice_2eproto;
};// -------------------------------------------------------------------

class PingRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PingRequest) */ {
 public:
  inline PingRequest() : PingRequest(nullptr) {}
  ~PingRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR PingRequest(::google::protobuf::internal::ConstantInitialized);

  inline PingRequest(const PingRequest& from)
      : PingRequest(nullptr, from) {}
  PingRequest(PingRequest&& from) noexcept
    : PingRequest() {
    *this = ::std::move(from);
  }

  inline PingRequest& operator=(const PingRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline PingRequest& operator=(PingRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PingRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const PingRequest* internal_default_instance() {
    return reinterpret_cast<const PingRequest*>(
               &_PingRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(PingRequest& a, PingRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(PingRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PingRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PingRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PingRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PingRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const PingRequest& from) {
    PingRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(PingRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "proto.PingRequest";
  }
  protected:
  explicit PingRequest(::google::protobuf::Arena* arena);
  PingRequest(::google::protobuf::Arena* arena, const PingRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValueFieldNumber = 1,
  };
  // int32 value = 1;
  void clear_value() ;
  ::int32_t value() const;
  void set_value(::int32_t value);

  private:
  ::int32_t _internal_value() const;
  void _internal_set_value(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:proto.PingRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::int32_t value_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_darwin_5fservice_2eproto;
};// -------------------------------------------------------------------

class CreateCharacterResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.CreateCharacterResponse) */ {
 public:
  inline CreateCharacterResponse() : CreateCharacterResponse(nullptr) {}
  ~CreateCharacterResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR CreateCharacterResponse(::google::protobuf::internal::ConstantInitialized);

  inline CreateCharacterResponse(const CreateCharacterResponse& from)
      : CreateCharacterResponse(nullptr, from) {}
  CreateCharacterResponse(CreateCharacterResponse&& from) noexcept
    : CreateCharacterResponse() {
    *this = ::std::move(from);
  }

  inline CreateCharacterResponse& operator=(const CreateCharacterResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateCharacterResponse& operator=(CreateCharacterResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CreateCharacterResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CreateCharacterResponse* internal_default_instance() {
    return reinterpret_cast<const CreateCharacterResponse*>(
               &_CreateCharacterResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(CreateCharacterResponse& a, CreateCharacterResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CreateCharacterResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateCharacterResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CreateCharacterResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CreateCharacterResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CreateCharacterResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const CreateCharacterResponse& from) {
    CreateCharacterResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(CreateCharacterResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "proto.CreateCharacterResponse";
  }
  protected:
  explicit CreateCharacterResponse(::google::protobuf::Arena* arena);
  CreateCharacterResponse(::google::protobuf::Arena* arena, const CreateCharacterResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kReturnEnumFieldNumber = 1,
  };
  // .proto.ReturnEnum return_enum = 1;
  void clear_return_enum() ;
  ::proto::ReturnEnum return_enum() const;
  void set_return_enum(::proto::ReturnEnum value);

  private:
  ::proto::ReturnEnum _internal_return_enum() const;
  void _internal_set_return_enum(::proto::ReturnEnum value);

  public:
  // @@protoc_insertion_point(class_scope:proto.CreateCharacterResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    int return_enum_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_darwin_5fservice_2eproto;
};// -------------------------------------------------------------------

class CreateCharacterRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.CreateCharacterRequest) */ {
 public:
  inline CreateCharacterRequest() : CreateCharacterRequest(nullptr) {}
  ~CreateCharacterRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR CreateCharacterRequest(::google::protobuf::internal::ConstantInitialized);

  inline CreateCharacterRequest(const CreateCharacterRequest& from)
      : CreateCharacterRequest(nullptr, from) {}
  CreateCharacterRequest(CreateCharacterRequest&& from) noexcept
    : CreateCharacterRequest() {
    *this = ::std::move(from);
  }

  inline CreateCharacterRequest& operator=(const CreateCharacterRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateCharacterRequest& operator=(CreateCharacterRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CreateCharacterRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const CreateCharacterRequest* internal_default_instance() {
    return reinterpret_cast<const CreateCharacterRequest*>(
               &_CreateCharacterRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(CreateCharacterRequest& a, CreateCharacterRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(CreateCharacterRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateCharacterRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CreateCharacterRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CreateCharacterRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CreateCharacterRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const CreateCharacterRequest& from) {
    CreateCharacterRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(CreateCharacterRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "proto.CreateCharacterRequest";
  }
  protected:
  explicit CreateCharacterRequest(::google::protobuf::Arena* arena);
  CreateCharacterRequest(::google::protobuf::Arena* arena, const CreateCharacterRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
    kColorFieldNumber = 2,
  };
  // string name = 1;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // .proto.Vector3 color = 2;
  bool has_color() const;
  void clear_color() ;
  const ::proto::Vector3& color() const;
  PROTOBUF_NODISCARD ::proto::Vector3* release_color();
  ::proto::Vector3* mutable_color();
  void set_allocated_color(::proto::Vector3* value);
  void unsafe_arena_set_allocated_color(::proto::Vector3* value);
  ::proto::Vector3* unsafe_arena_release_color();

  private:
  const ::proto::Vector3& _internal_color() const;
  ::proto::Vector3* _internal_mutable_color();

  public:
  // @@protoc_insertion_point(class_scope:proto.CreateCharacterRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      41, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::proto::Vector3* color_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_darwin_5fservice_2eproto;
};// -------------------------------------------------------------------

class ReportInGameRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ReportInGameRequest) */ {
 public:
  inline ReportInGameRequest() : ReportInGameRequest(nullptr) {}
  ~ReportInGameRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ReportInGameRequest(::google::protobuf::internal::ConstantInitialized);

  inline ReportInGameRequest(const ReportInGameRequest& from)
      : ReportInGameRequest(nullptr, from) {}
  ReportInGameRequest(ReportInGameRequest&& from) noexcept
    : ReportInGameRequest() {
    *this = ::std::move(from);
  }

  inline ReportInGameRequest& operator=(const ReportInGameRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ReportInGameRequest& operator=(ReportInGameRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ReportInGameRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ReportInGameRequest* internal_default_instance() {
    return reinterpret_cast<const ReportInGameRequest*>(
               &_ReportInGameRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(ReportInGameRequest& a, ReportInGameRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(ReportInGameRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ReportInGameRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ReportInGameRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ReportInGameRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ReportInGameRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const ReportInGameRequest& from) {
    ReportInGameRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ReportInGameRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "proto.ReportInGameRequest";
  }
  protected:
  explicit ReportInGameRequest(::google::protobuf::Arena* arena);
  ReportInGameRequest(::google::protobuf::Arena* arena, const ReportInGameRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
    kPotentialHitFieldNumber = 3,
    kPhysicFieldNumber = 2,
    kSpecialEffectBoostFieldNumber = 5,
    kStatusEnumFieldNumber = 4,
  };
  // string name = 1;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // string potential_hit = 3;
  void clear_potential_hit() ;
  const std::string& potential_hit() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_potential_hit(Arg_&& arg, Args_... args);
  std::string* mutable_potential_hit();
  PROTOBUF_NODISCARD std::string* release_potential_hit();
  void set_allocated_potential_hit(std::string* value);

  private:
  const std::string& _internal_potential_hit() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_potential_hit(
      const std::string& value);
  std::string* _internal_mutable_potential_hit();

  public:
  // .proto.Physic physic = 2;
  bool has_physic() const;
  void clear_physic() ;
  const ::proto::Physic& physic() const;
  PROTOBUF_NODISCARD ::proto::Physic* release_physic();
  ::proto::Physic* mutable_physic();
  void set_allocated_physic(::proto::Physic* value);
  void unsafe_arena_set_allocated_physic(::proto::Physic* value);
  ::proto::Physic* unsafe_arena_release_physic();

  private:
  const ::proto::Physic& _internal_physic() const;
  ::proto::Physic* _internal_mutable_physic();

  public:
  // .proto.SpecialEffectParameter special_effect_boost = 5;
  bool has_special_effect_boost() const;
  void clear_special_effect_boost() ;
  const ::proto::SpecialEffectParameter& special_effect_boost() const;
  PROTOBUF_NODISCARD ::proto::SpecialEffectParameter* release_special_effect_boost();
  ::proto::SpecialEffectParameter* mutable_special_effect_boost();
  void set_allocated_special_effect_boost(::proto::SpecialEffectParameter* value);
  void unsafe_arena_set_allocated_special_effect_boost(::proto::SpecialEffectParameter* value);
  ::proto::SpecialEffectParameter* unsafe_arena_release_special_effect_boost();

  private:
  const ::proto::SpecialEffectParameter& _internal_special_effect_boost() const;
  ::proto::SpecialEffectParameter* _internal_mutable_special_effect_boost();

  public:
  // .proto.StatusEnum status_enum = 4;
  void clear_status_enum() ;
  ::proto::StatusEnum status_enum() const;
  void set_status_enum(::proto::StatusEnum value);

  private:
  ::proto::StatusEnum _internal_status_enum() const;
  void _internal_set_status_enum(::proto::StatusEnum value);

  public:
  // @@protoc_insertion_point(class_scope:proto.ReportInGameRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 2,
      51, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::ArenaStringPtr potential_hit_;
    ::proto::Physic* physic_;
    ::proto::SpecialEffectParameter* special_effect_boost_;
    int status_enum_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_darwin_5fservice_2eproto;
};// -------------------------------------------------------------------

class UpdateResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.UpdateResponse) */ {
 public:
  inline UpdateResponse() : UpdateResponse(nullptr) {}
  ~UpdateResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR UpdateResponse(::google::protobuf::internal::ConstantInitialized);

  inline UpdateResponse(const UpdateResponse& from)
      : UpdateResponse(nullptr, from) {}
  UpdateResponse(UpdateResponse&& from) noexcept
    : UpdateResponse() {
    *this = ::std::move(from);
  }

  inline UpdateResponse& operator=(const UpdateResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdateResponse& operator=(UpdateResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UpdateResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const UpdateResponse* internal_default_instance() {
    return reinterpret_cast<const UpdateResponse*>(
               &_UpdateResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(UpdateResponse& a, UpdateResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(UpdateResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpdateResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UpdateResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<UpdateResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UpdateResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const UpdateResponse& from) {
    UpdateResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(UpdateResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "proto.UpdateResponse";
  }
  protected:
  explicit UpdateResponse(::google::protobuf::Arena* arena);
  UpdateResponse(::google::protobuf::Arena* arena, const UpdateResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCharactersFieldNumber = 1,
    kElementsFieldNumber = 2,
    kTimeFieldNumber = 3,
  };
  // repeated .proto.Character characters = 1;
  int characters_size() const;
  private:
  int _internal_characters_size() const;

  public:
  void clear_characters() ;
  ::proto::Character* mutable_characters(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::Character >*
      mutable_characters();
  private:
  const ::google::protobuf::RepeatedPtrField<::proto::Character>& _internal_characters() const;
  ::google::protobuf::RepeatedPtrField<::proto::Character>* _internal_mutable_characters();
  public:
  const ::proto::Character& characters(int index) const;
  ::proto::Character* add_characters();
  const ::google::protobuf::RepeatedPtrField< ::proto::Character >&
      characters() const;
  // repeated .proto.Element elements = 2;
  int elements_size() const;
  private:
  int _internal_elements_size() const;

  public:
  void clear_elements() ;
  ::proto::Element* mutable_elements(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::Element >*
      mutable_elements();
  private:
  const ::google::protobuf::RepeatedPtrField<::proto::Element>& _internal_elements() const;
  ::google::protobuf::RepeatedPtrField<::proto::Element>* _internal_mutable_elements();
  public:
  const ::proto::Element& elements(int index) const;
  ::proto::Element* add_elements();
  const ::google::protobuf::RepeatedPtrField< ::proto::Element >&
      elements() const;
  // double time = 3;
  void clear_time() ;
  double time() const;
  void set_time(double value);

  private:
  double _internal_time() const;
  void _internal_set_time(double value);

  public:
  // @@protoc_insertion_point(class_scope:proto.UpdateResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 2,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedPtrField< ::proto::Character > characters_;
    ::google::protobuf::RepeatedPtrField< ::proto::Element > elements_;
    double time_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_darwin_5fservice_2eproto;
};// -------------------------------------------------------------------

class PingResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PingResponse) */ {
 public:
  inline PingResponse() : PingResponse(nullptr) {}
  ~PingResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR PingResponse(::google::protobuf::internal::ConstantInitialized);

  inline PingResponse(const PingResponse& from)
      : PingResponse(nullptr, from) {}
  PingResponse(PingResponse&& from) noexcept
    : PingResponse() {
    *this = ::std::move(from);
  }

  inline PingResponse& operator=(const PingResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline PingResponse& operator=(PingResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PingResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const PingResponse* internal_default_instance() {
    return reinterpret_cast<const PingResponse*>(
               &_PingResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(PingResponse& a, PingResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(PingResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PingResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PingResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PingResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PingResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const PingResponse& from) {
    PingResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(PingResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "proto.PingResponse";
  }
  protected:
  explicit PingResponse(::google::protobuf::Arena* arena);
  PingResponse(::google::protobuf::Arena* arena, const PingResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPlayerParameterFieldNumber = 3,
    kTimeFieldNumber = 2,
    kValueFieldNumber = 1,
  };
  // .proto.PlayerParameter player_parameter = 3;
  bool has_player_parameter() const;
  void clear_player_parameter() ;
  const ::proto::PlayerParameter& player_parameter() const;
  PROTOBUF_NODISCARD ::proto::PlayerParameter* release_player_parameter();
  ::proto::PlayerParameter* mutable_player_parameter();
  void set_allocated_player_parameter(::proto::PlayerParameter* value);
  void unsafe_arena_set_allocated_player_parameter(::proto::PlayerParameter* value);
  ::proto::PlayerParameter* unsafe_arena_release_player_parameter();

  private:
  const ::proto::PlayerParameter& _internal_player_parameter() const;
  ::proto::PlayerParameter* _internal_mutable_player_parameter();

  public:
  // double time = 2;
  void clear_time() ;
  double time() const;
  void set_time(double value);

  private:
  double _internal_time() const;
  void _internal_set_time(double value);

  public:
  // int32 value = 1;
  void clear_value() ;
  ::int32_t value() const;
  void set_value(::int32_t value);

  private:
  ::int32_t _internal_value() const;
  void _internal_set_value(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:proto.PingResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::proto::PlayerParameter* player_parameter_;
    double time_;
    ::int32_t value_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_darwin_5fservice_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// UpdateRequest

// string name = 1;
inline void UpdateRequest::clear_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& UpdateRequest::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:proto.UpdateRequest.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UpdateRequest::set_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:proto.UpdateRequest.name)
}
inline std::string* UpdateRequest::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:proto.UpdateRequest.name)
  return _s;
}
inline const std::string& UpdateRequest::_internal_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.name_.Get();
}
inline void UpdateRequest::_internal_set_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(value, GetArena());
}
inline std::string* UpdateRequest::_internal_mutable_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* UpdateRequest::release_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:proto.UpdateRequest.name)
  return _impl_.name_.Release();
}
inline void UpdateRequest::set_allocated_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:proto.UpdateRequest.name)
}

// -------------------------------------------------------------------

// UpdateResponse

// repeated .proto.Character characters = 1;
inline int UpdateResponse::_internal_characters_size() const {
  return _internal_characters().size();
}
inline int UpdateResponse::characters_size() const {
  return _internal_characters_size();
}
inline ::proto::Character* UpdateResponse::mutable_characters(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:proto.UpdateResponse.characters)
  return _internal_mutable_characters()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::proto::Character>* UpdateResponse::mutable_characters()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:proto.UpdateResponse.characters)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_characters();
}
inline const ::proto::Character& UpdateResponse::characters(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:proto.UpdateResponse.characters)
  return _internal_characters().Get(index);
}
inline ::proto::Character* UpdateResponse::add_characters() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::proto::Character* _add = _internal_mutable_characters()->Add();
  // @@protoc_insertion_point(field_add:proto.UpdateResponse.characters)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::proto::Character>& UpdateResponse::characters() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:proto.UpdateResponse.characters)
  return _internal_characters();
}
inline const ::google::protobuf::RepeatedPtrField<::proto::Character>&
UpdateResponse::_internal_characters() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.characters_;
}
inline ::google::protobuf::RepeatedPtrField<::proto::Character>*
UpdateResponse::_internal_mutable_characters() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.characters_;
}

// repeated .proto.Element elements = 2;
inline int UpdateResponse::_internal_elements_size() const {
  return _internal_elements().size();
}
inline int UpdateResponse::elements_size() const {
  return _internal_elements_size();
}
inline ::proto::Element* UpdateResponse::mutable_elements(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:proto.UpdateResponse.elements)
  return _internal_mutable_elements()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::proto::Element>* UpdateResponse::mutable_elements()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:proto.UpdateResponse.elements)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_elements();
}
inline const ::proto::Element& UpdateResponse::elements(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:proto.UpdateResponse.elements)
  return _internal_elements().Get(index);
}
inline ::proto::Element* UpdateResponse::add_elements() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::proto::Element* _add = _internal_mutable_elements()->Add();
  // @@protoc_insertion_point(field_add:proto.UpdateResponse.elements)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::proto::Element>& UpdateResponse::elements() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:proto.UpdateResponse.elements)
  return _internal_elements();
}
inline const ::google::protobuf::RepeatedPtrField<::proto::Element>&
UpdateResponse::_internal_elements() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.elements_;
}
inline ::google::protobuf::RepeatedPtrField<::proto::Element>*
UpdateResponse::_internal_mutable_elements() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.elements_;
}

// double time = 3;
inline void UpdateResponse::clear_time() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.time_ = 0;
}
inline double UpdateResponse::time() const {
  // @@protoc_insertion_point(field_get:proto.UpdateResponse.time)
  return _internal_time();
}
inline void UpdateResponse::set_time(double value) {
  _internal_set_time(value);
  // @@protoc_insertion_point(field_set:proto.UpdateResponse.time)
}
inline double UpdateResponse::_internal_time() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.time_;
}
inline void UpdateResponse::_internal_set_time(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.time_ = value;
}

// -------------------------------------------------------------------

// ReportInGameRequest

// string name = 1;
inline void ReportInGameRequest::clear_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& ReportInGameRequest::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:proto.ReportInGameRequest.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ReportInGameRequest::set_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:proto.ReportInGameRequest.name)
}
inline std::string* ReportInGameRequest::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:proto.ReportInGameRequest.name)
  return _s;
}
inline const std::string& ReportInGameRequest::_internal_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.name_.Get();
}
inline void ReportInGameRequest::_internal_set_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(value, GetArena());
}
inline std::string* ReportInGameRequest::_internal_mutable_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* ReportInGameRequest::release_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:proto.ReportInGameRequest.name)
  return _impl_.name_.Release();
}
inline void ReportInGameRequest::set_allocated_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:proto.ReportInGameRequest.name)
}

// .proto.Physic physic = 2;
inline bool ReportInGameRequest::has_physic() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.physic_ != nullptr);
  return value;
}
inline const ::proto::Physic& ReportInGameRequest::_internal_physic() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::proto::Physic* p = _impl_.physic_;
  return p != nullptr ? *p : reinterpret_cast<const ::proto::Physic&>(::proto::_Physic_default_instance_);
}
inline const ::proto::Physic& ReportInGameRequest::physic() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:proto.ReportInGameRequest.physic)
  return _internal_physic();
}
inline void ReportInGameRequest::unsafe_arena_set_allocated_physic(::proto::Physic* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.physic_);
  }
  _impl_.physic_ = reinterpret_cast<::proto::Physic*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:proto.ReportInGameRequest.physic)
}
inline ::proto::Physic* ReportInGameRequest::release_physic() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::proto::Physic* released = _impl_.physic_;
  _impl_.physic_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::proto::Physic* ReportInGameRequest::unsafe_arena_release_physic() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:proto.ReportInGameRequest.physic)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::proto::Physic* temp = _impl_.physic_;
  _impl_.physic_ = nullptr;
  return temp;
}
inline ::proto::Physic* ReportInGameRequest::_internal_mutable_physic() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.physic_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::Physic>(GetArena());
    _impl_.physic_ = reinterpret_cast<::proto::Physic*>(p);
  }
  return _impl_.physic_;
}
inline ::proto::Physic* ReportInGameRequest::mutable_physic() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::proto::Physic* _msg = _internal_mutable_physic();
  // @@protoc_insertion_point(field_mutable:proto.ReportInGameRequest.physic)
  return _msg;
}
inline void ReportInGameRequest::set_allocated_physic(::proto::Physic* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.physic_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.physic_ = reinterpret_cast<::proto::Physic*>(value);
  // @@protoc_insertion_point(field_set_allocated:proto.ReportInGameRequest.physic)
}

// string potential_hit = 3;
inline void ReportInGameRequest::clear_potential_hit() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.potential_hit_.ClearToEmpty();
}
inline const std::string& ReportInGameRequest::potential_hit() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:proto.ReportInGameRequest.potential_hit)
  return _internal_potential_hit();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ReportInGameRequest::set_potential_hit(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.potential_hit_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:proto.ReportInGameRequest.potential_hit)
}
inline std::string* ReportInGameRequest::mutable_potential_hit() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_potential_hit();
  // @@protoc_insertion_point(field_mutable:proto.ReportInGameRequest.potential_hit)
  return _s;
}
inline const std::string& ReportInGameRequest::_internal_potential_hit() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.potential_hit_.Get();
}
inline void ReportInGameRequest::_internal_set_potential_hit(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.potential_hit_.Set(value, GetArena());
}
inline std::string* ReportInGameRequest::_internal_mutable_potential_hit() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.potential_hit_.Mutable( GetArena());
}
inline std::string* ReportInGameRequest::release_potential_hit() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:proto.ReportInGameRequest.potential_hit)
  return _impl_.potential_hit_.Release();
}
inline void ReportInGameRequest::set_allocated_potential_hit(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.potential_hit_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.potential_hit_.IsDefault()) {
          _impl_.potential_hit_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:proto.ReportInGameRequest.potential_hit)
}

// .proto.StatusEnum status_enum = 4;
inline void ReportInGameRequest::clear_status_enum() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.status_enum_ = 0;
}
inline ::proto::StatusEnum ReportInGameRequest::status_enum() const {
  // @@protoc_insertion_point(field_get:proto.ReportInGameRequest.status_enum)
  return _internal_status_enum();
}
inline void ReportInGameRequest::set_status_enum(::proto::StatusEnum value) {
  _internal_set_status_enum(value);
  // @@protoc_insertion_point(field_set:proto.ReportInGameRequest.status_enum)
}
inline ::proto::StatusEnum ReportInGameRequest::_internal_status_enum() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::proto::StatusEnum>(_impl_.status_enum_);
}
inline void ReportInGameRequest::_internal_set_status_enum(::proto::StatusEnum value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.status_enum_ = value;
}

// .proto.SpecialEffectParameter special_effect_boost = 5;
inline bool ReportInGameRequest::has_special_effect_boost() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.special_effect_boost_ != nullptr);
  return value;
}
inline const ::proto::SpecialEffectParameter& ReportInGameRequest::_internal_special_effect_boost() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::proto::SpecialEffectParameter* p = _impl_.special_effect_boost_;
  return p != nullptr ? *p : reinterpret_cast<const ::proto::SpecialEffectParameter&>(::proto::_SpecialEffectParameter_default_instance_);
}
inline const ::proto::SpecialEffectParameter& ReportInGameRequest::special_effect_boost() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:proto.ReportInGameRequest.special_effect_boost)
  return _internal_special_effect_boost();
}
inline void ReportInGameRequest::unsafe_arena_set_allocated_special_effect_boost(::proto::SpecialEffectParameter* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.special_effect_boost_);
  }
  _impl_.special_effect_boost_ = reinterpret_cast<::proto::SpecialEffectParameter*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:proto.ReportInGameRequest.special_effect_boost)
}
inline ::proto::SpecialEffectParameter* ReportInGameRequest::release_special_effect_boost() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::proto::SpecialEffectParameter* released = _impl_.special_effect_boost_;
  _impl_.special_effect_boost_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::proto::SpecialEffectParameter* ReportInGameRequest::unsafe_arena_release_special_effect_boost() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:proto.ReportInGameRequest.special_effect_boost)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::proto::SpecialEffectParameter* temp = _impl_.special_effect_boost_;
  _impl_.special_effect_boost_ = nullptr;
  return temp;
}
inline ::proto::SpecialEffectParameter* ReportInGameRequest::_internal_mutable_special_effect_boost() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.special_effect_boost_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::SpecialEffectParameter>(GetArena());
    _impl_.special_effect_boost_ = reinterpret_cast<::proto::SpecialEffectParameter*>(p);
  }
  return _impl_.special_effect_boost_;
}
inline ::proto::SpecialEffectParameter* ReportInGameRequest::mutable_special_effect_boost() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::proto::SpecialEffectParameter* _msg = _internal_mutable_special_effect_boost();
  // @@protoc_insertion_point(field_mutable:proto.ReportInGameRequest.special_effect_boost)
  return _msg;
}
inline void ReportInGameRequest::set_allocated_special_effect_boost(::proto::SpecialEffectParameter* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.special_effect_boost_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.special_effect_boost_ = reinterpret_cast<::proto::SpecialEffectParameter*>(value);
  // @@protoc_insertion_point(field_set_allocated:proto.ReportInGameRequest.special_effect_boost)
}

// -------------------------------------------------------------------

// ReportInGameResponse

// -------------------------------------------------------------------

// CreateCharacterRequest

// string name = 1;
inline void CreateCharacterRequest::clear_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& CreateCharacterRequest::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:proto.CreateCharacterRequest.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CreateCharacterRequest::set_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:proto.CreateCharacterRequest.name)
}
inline std::string* CreateCharacterRequest::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:proto.CreateCharacterRequest.name)
  return _s;
}
inline const std::string& CreateCharacterRequest::_internal_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.name_.Get();
}
inline void CreateCharacterRequest::_internal_set_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(value, GetArena());
}
inline std::string* CreateCharacterRequest::_internal_mutable_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* CreateCharacterRequest::release_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:proto.CreateCharacterRequest.name)
  return _impl_.name_.Release();
}
inline void CreateCharacterRequest::set_allocated_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:proto.CreateCharacterRequest.name)
}

// .proto.Vector3 color = 2;
inline bool CreateCharacterRequest::has_color() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.color_ != nullptr);
  return value;
}
inline const ::proto::Vector3& CreateCharacterRequest::_internal_color() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::proto::Vector3* p = _impl_.color_;
  return p != nullptr ? *p : reinterpret_cast<const ::proto::Vector3&>(::proto::_Vector3_default_instance_);
}
inline const ::proto::Vector3& CreateCharacterRequest::color() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:proto.CreateCharacterRequest.color)
  return _internal_color();
}
inline void CreateCharacterRequest::unsafe_arena_set_allocated_color(::proto::Vector3* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.color_);
  }
  _impl_.color_ = reinterpret_cast<::proto::Vector3*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:proto.CreateCharacterRequest.color)
}
inline ::proto::Vector3* CreateCharacterRequest::release_color() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::proto::Vector3* released = _impl_.color_;
  _impl_.color_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::proto::Vector3* CreateCharacterRequest::unsafe_arena_release_color() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:proto.CreateCharacterRequest.color)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::proto::Vector3* temp = _impl_.color_;
  _impl_.color_ = nullptr;
  return temp;
}
inline ::proto::Vector3* CreateCharacterRequest::_internal_mutable_color() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.color_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::Vector3>(GetArena());
    _impl_.color_ = reinterpret_cast<::proto::Vector3*>(p);
  }
  return _impl_.color_;
}
inline ::proto::Vector3* CreateCharacterRequest::mutable_color() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::proto::Vector3* _msg = _internal_mutable_color();
  // @@protoc_insertion_point(field_mutable:proto.CreateCharacterRequest.color)
  return _msg;
}
inline void CreateCharacterRequest::set_allocated_color(::proto::Vector3* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.color_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.color_ = reinterpret_cast<::proto::Vector3*>(value);
  // @@protoc_insertion_point(field_set_allocated:proto.CreateCharacterRequest.color)
}

// -------------------------------------------------------------------

// CreateCharacterResponse

// .proto.ReturnEnum return_enum = 1;
inline void CreateCharacterResponse::clear_return_enum() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.return_enum_ = 0;
}
inline ::proto::ReturnEnum CreateCharacterResponse::return_enum() const {
  // @@protoc_insertion_point(field_get:proto.CreateCharacterResponse.return_enum)
  return _internal_return_enum();
}
inline void CreateCharacterResponse::set_return_enum(::proto::ReturnEnum value) {
  _internal_set_return_enum(value);
  // @@protoc_insertion_point(field_set:proto.CreateCharacterResponse.return_enum)
}
inline ::proto::ReturnEnum CreateCharacterResponse::_internal_return_enum() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::proto::ReturnEnum>(_impl_.return_enum_);
}
inline void CreateCharacterResponse::_internal_set_return_enum(::proto::ReturnEnum value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.return_enum_ = value;
}

// -------------------------------------------------------------------

// PingRequest

// int32 value = 1;
inline void PingRequest::clear_value() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.value_ = 0;
}
inline ::int32_t PingRequest::value() const {
  // @@protoc_insertion_point(field_get:proto.PingRequest.value)
  return _internal_value();
}
inline void PingRequest::set_value(::int32_t value) {
  _internal_set_value(value);
  // @@protoc_insertion_point(field_set:proto.PingRequest.value)
}
inline ::int32_t PingRequest::_internal_value() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.value_;
}
inline void PingRequest::_internal_set_value(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.value_ = value;
}

// -------------------------------------------------------------------

// PingResponse

// int32 value = 1;
inline void PingResponse::clear_value() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.value_ = 0;
}
inline ::int32_t PingResponse::value() const {
  // @@protoc_insertion_point(field_get:proto.PingResponse.value)
  return _internal_value();
}
inline void PingResponse::set_value(::int32_t value) {
  _internal_set_value(value);
  // @@protoc_insertion_point(field_set:proto.PingResponse.value)
}
inline ::int32_t PingResponse::_internal_value() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.value_;
}
inline void PingResponse::_internal_set_value(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.value_ = value;
}

// double time = 2;
inline void PingResponse::clear_time() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.time_ = 0;
}
inline double PingResponse::time() const {
  // @@protoc_insertion_point(field_get:proto.PingResponse.time)
  return _internal_time();
}
inline void PingResponse::set_time(double value) {
  _internal_set_time(value);
  // @@protoc_insertion_point(field_set:proto.PingResponse.time)
}
inline double PingResponse::_internal_time() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.time_;
}
inline void PingResponse::_internal_set_time(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.time_ = value;
}

// .proto.PlayerParameter player_parameter = 3;
inline bool PingResponse::has_player_parameter() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.player_parameter_ != nullptr);
  return value;
}
inline const ::proto::PlayerParameter& PingResponse::_internal_player_parameter() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::proto::PlayerParameter* p = _impl_.player_parameter_;
  return p != nullptr ? *p : reinterpret_cast<const ::proto::PlayerParameter&>(::proto::_PlayerParameter_default_instance_);
}
inline const ::proto::PlayerParameter& PingResponse::player_parameter() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:proto.PingResponse.player_parameter)
  return _internal_player_parameter();
}
inline void PingResponse::unsafe_arena_set_allocated_player_parameter(::proto::PlayerParameter* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.player_parameter_);
  }
  _impl_.player_parameter_ = reinterpret_cast<::proto::PlayerParameter*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:proto.PingResponse.player_parameter)
}
inline ::proto::PlayerParameter* PingResponse::release_player_parameter() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::proto::PlayerParameter* released = _impl_.player_parameter_;
  _impl_.player_parameter_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::proto::PlayerParameter* PingResponse::unsafe_arena_release_player_parameter() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:proto.PingResponse.player_parameter)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::proto::PlayerParameter* temp = _impl_.player_parameter_;
  _impl_.player_parameter_ = nullptr;
  return temp;
}
inline ::proto::PlayerParameter* PingResponse::_internal_mutable_player_parameter() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.player_parameter_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::PlayerParameter>(GetArena());
    _impl_.player_parameter_ = reinterpret_cast<::proto::PlayerParameter*>(p);
  }
  return _impl_.player_parameter_;
}
inline ::proto::PlayerParameter* PingResponse::mutable_player_parameter() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::proto::PlayerParameter* _msg = _internal_mutable_player_parameter();
  // @@protoc_insertion_point(field_mutable:proto.PingResponse.player_parameter)
  return _msg;
}
inline void PingResponse::set_allocated_player_parameter(::proto::PlayerParameter* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.player_parameter_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.player_parameter_ = reinterpret_cast<::proto::PlayerParameter*>(value);
  // @@protoc_insertion_point(field_set_allocated:proto.PingResponse.player_parameter)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace proto


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_darwin_5fservice_2eproto_2epb_2eh
